plugins {
	id "org.asciidoctor.convert" version "1.5.3"
    id "com.gorylenko.gradle-git-properties" version "1.4.6"
}

springBoot {
    mainClass = 'sagan.SiteApplication'
    requiresUnpack = ['org.jruby:jruby-complete', 'org.asciidoctor:asciidoctorj']
}

asciidoctor {
    attributes \
      'snippets': file('build/snippets')
	dependsOn integTest
}

jar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}

dependencies {
    compile project(':sagan-common')
    compile project(':sagan-client')
    // temporily use :sagan-github
    compile project(':sagan-github')

    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-redis"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.boot:spring-boot-devtools"
    compile "org.springframework.security:spring-security-acl"

    // Thymeleaf is used as the template engine for serving HTML
    compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    compile 'com.github.mxab.thymeleaf.extras:thymeleaf-extras-data-attribute'
    compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity4'

    // nekohtml is required for thymeleaf's LEGACYHTML5 mode
    runtime 'net.sourceforge.nekohtml:nekohtml'

    // for use in generating blog atom feeds
    compile 'com.rometools:rome'

    // for use in serving redirects; see urlrewrite.xml
    compile 'org.tuckey:urlrewritefilter:4.0.4'
    // override Boot dependency management, since urlrewritefilter uses a more recent version
    compile 'xml-apis:xml-apis:1.4.01'

    // for XML manipulation
    compile 'org.xmlbeam:xmlprojector:1.4.8'

    // for use in mocking http interactions
    testCompile "org.springframework.restdocs:spring-restdocs-mockmvc"
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile project(':sagan-github')

    // pick up common test utility classes
    testCompile project(':sagan-common').sourceSets.testUtil.output

}

clean.doFirst {
    delete "${projectDir}/data/"
    println "Deleted ${projectDir}/data/"
}